{
  "version": 3,
  "sources": ["../../../src/components/link-list/link-list.ts", "../../../src/pages/error/error.ts", "../../../src/components/core/constants.ts", "../../../src/services/log.ts", "../../../src/services/web-utils.ts", "../../../src/components/core/slot-machine.ts", "../../../src/components/core/view.ts", "../../../src/components/link/link.ts", "../../../src/pages/error/error-403.ts", "../../../src/pages/error/error-404.ts", "../../../src/pages/error/error-500.ts", "../../../src/services/router-1990.ts"],
  "sourcesContent": ["interface LinkListProps {\n  className?: string;\n  children?: string[];\n  tag?: string;\n  squire?: boolean;\n}\n\nconst LinkList: FC<LinkListProps> = (props = {}) => {\n  const { className = '', children, squire, tag = 'div' } = props;\n  let classList = `link-list`;\n  if (className) classList += ` ${className}`;\n  if (squire) classList += ' link-list--squire';\n\n  return `\n      <${tag} class=\"${classList}\">\n        ${children\n          ?.map(\n            (link: string) =>\n              `<div class=\"link-list__item\">${link}</div>`,\n          )\n          .join('')}\n      </${tag}>\n    `;\n};\n\nexport default LinkList;\n", "import LinkList from '@app/components/link-list/link-list';\n\ninterface ErrorPageProps {\n  message: string;\n  children?: string[];\n}\n\nconst ErrorPage: FC<ErrorPageProps> = (\n  { message, children } = { message: 'Unknown error' },\n) => `\n  <div class=\"error\">\n    <div class=\"card error__card\">\n      <p>${message}</p>\n      ${LinkList({\n        children,\n      })}\n    </div>\n  </div>\n`;\n\nexport default ErrorPage;\n", "export const GITHUB_CLIENT_ID = 'ae0dcffd947e0ca15a12';\nexport const SCOPE = 'user repo';\nexport const ERROR_ACCESS_TOKEN = 'Access token not provided';\nexport const ERROR_NOT_FOUND = 'Page not found';\nexport const ERROR_REQUEST = 'Wrong request';\n", "import { ERROR_ACCESS_TOKEN, ERROR_NOT_FOUND } from '@app/components/core/constants';\n\nconst isProd = false\n\n// const message = (...args: any[]): void => {\n//   const { component } = args[0] || {}\n//   const root = document.getElementById('root')\n//   if (root !== null && componentMap[component] !== undefined) {\n//     root.innerHTML = componentMap[component](...args)\n//   };\n//   if (isProd) return;\n//   console[component](...args)\n// }\n\nexport const error = (error: Error) => {\n  // console.error(error)\n  if (typeof window === 'undefined') return;\n\n  // Send logs to Sentry\n  if (isProd && typeof Sentry !== 'undefined') Sentry.captureException(error);\n  // @ts-ignore\n  if (isProd && typeof window.dataLayer !== 'undefined') window.dataLayer.push({\n    'event': 'issue',\n    message: error.message,\n    // @ts-ignore\n    row: error.lineNumber || null,\n    // @ts-ignore\n    source: error.fileName || null,\n    stack: error.stack,\n  });\n\n  if (error.message === ERROR_NOT_FOUND) {\n    window.location.href = \"/404\";\n    return;\n  }\n  if (error.message === ERROR_ACCESS_TOKEN) {\n    window.location.href = \"/403\";\n    return;\n  }\n  // root.innerHTML = Error500Page(error)\n  return;\n}\n\n// eslint-disable-next-line no-console\nexport const debug = isProd ? () => {} : (...args:unknown[]) => { console.debug(...args); }\n// eslint-disable-next-line no-console\nexport const warn = isProd ? () => {} : (...args:unknown[]) => { console.warn(...args); }\n// eslint-disable-next-line no-console\nexport const info = isProd ? () => {} : (...args:unknown[]) => { console.info(...args); }\n// eslint-disable-next-line no-console\nexport const log = isProd ? () => {} : (...args:unknown[]) => { console.log(...args); }\n", "export const getRoute = () => {\n  const { protocol, hash, pathname } = document.location\n  const path = `${pathname.replace('index.html', '')}${hash.slice(2)}` // /path1#/path2\n  return path\n}\n\nexport const escapeHTML = (unsafe: string) => unsafe.replace(/[&<\"']/g, (m) => {\n  switch (m) {\n    case '&':\n      return '&amp;';\n    case '<':\n      return '&lt;';\n    case '\"':\n      return '&quot;';\n    default:\n      return '&#039;';\n  }\n});", "import Icon from '@app/components/icon/icon';\nimport { createRef } from '@app/components/core/view';\nimport * as log from '@app/services/log';\n\nlet tries = 0;\nlet blocked = false;\nlet cache = '';\nconst events: (() => void)[] = [];\nconst roll = '\uD83C\uDF4F,\uD83C\uDF30,\uD83C\uDF4B,\uD83C\uDF45,\uD83C\uDF46,\uD83C\uDF47,\uD83C\uDF53,\uD83C\uDF49,\uD83C\uDF50,\uD83C\uDF52,\uD83C\uDF51,\uD83E\uDD51'.split(',');\nconst { floor, random } = Math;\nconst randomRoll = (what: string[]): string =>\n  what[floor(random() * what.length)];\n\nconst Reels: FC<{}> = () => {\n  if (blocked) return cache;\n  const [a, b, c] = /*(tries === 3) ? ['\uD83C\uDF4F', '\uD83C\uDF4F', '\uD83C\uDF4F'] : */ [\n    roll,\n    roll,\n    roll,\n  ].flatMap(randomRoll);\n  cache = `${a} ${b} ${c}`;\n  log.debug(`${tries} ${cache}`);\n\n  if (a == b && b == c) {\n    const msg = `\n            ${cache}\n    You won in ${tries} tries`;\n    blocked = true;\n    events.push(() => {\n      setTimeout(() => {\n        log.info(msg);\n        alert(msg);\n        blocked = false;\n      });\n    });\n    tries = 0;\n  } else {\n    tries++;\n  }\n  return cache;\n};\n\nconst SlotMachine: FC<{}> = () => {\n  const ref = createRef();\n\n  setTimeout(() => {\n    if (typeof window === 'undefined') return;\n\n    // Mount/unmount\n    const observer = new MutationObserver(\n      (mutationList, observer) => {\n        for (const mutation of mutationList) {\n          if (mutation.type === 'childList') {\n            const event = events.pop();\n            if (event) event();\n          }\n        }\n      },\n    );\n    ref.current && observer.observe(ref.current, { childList: true });\n\n    // Click\n    ref.current?.addEventListener('click', () => {\n      if (!ref.current) return;\n      ref.current.innerHTML = Reels();\n    });\n\n    // Keyboard events\n    // keydown for keeping reels spinning\n    document.addEventListener('keydown', (event: KeyboardEvent) => {\n      // bug 354358\n      if (event.isComposing || event.keyCode === 229) {\n        return;\n      }\n\n      // Enter, Space\n      if (event.which !== 13 && event.which !== 32) {\n        return;\n      }\n\n      if (!ref.current) return;\n      ref.current.innerHTML = Reels();\n    });\n  });\n\n  return `\n    <div class=\"slot-machine\">\n      ${Icon({\n        name: 'slot-machine-icon',\n        className: 'slot-machine__icon',\n      })}\n      <span class=\"slot-machine__reels\" ref=\"${ref}\">${Reels()}</span>\n    </div>\n  `;\n};\n\nexport default SlotMachine;\n", "// deno-lint-ignore-file no-undef\n// global document, navigation\nimport * as log from '@app/services/log';\nimport { escapeHTML } from '@app/services/web-utils';\nimport * as componentsMap from '@app/components/index';\n\nexport class Ref {\n  id: string | null = null;\n  toString() {\n    const id = btoa(\n      `${Math.ceil(Math.random() * 1e13) + +new Date()}`,\n    ).slice(10, 18);\n    return (this.id = this.id || `ref-${id}`);\n  }\n  // @ts-ignore\n  get current() {\n    if (\n      typeof window === 'undefined' ||\n      typeof document === 'undefined'\n    )\n      return null;\n    return <HTMLInputElement>(\n      document.querySelector(`[ref=${this.id}]`)\n    );\n  }\n}\n\nexport const createRef = () => new Ref();\n\nexport interface State extends ViewProps {\n  title?: string;\n  url?: string;\n}\n\nexport const useState = (initialState = undefined) =>\n  typeof history === 'undefined'\n    ? []\n    : [\n        initialState || history.state || {},\n        (state: State, title: string, url: string) =>\n          history.pushState(\n            { ...history.state, ...state },\n            title || '',\n            url || location.href,\n          ),\n      ];\n\nconst mutationConfig = {\n  attributes: true,\n  childList: true,\n  subtree: true,\n};\n\nconst render =\n  (\n    ref: Ref,\n    eventType: string,\n    props: State = { component: 'View' },\n  ) =>\n  (event: MutationRecord[] | MutationRecord | Error) => {\n    const [state, setState] = useState();\n    const { component = 'View' } = props;\n    log.debug('render', {\n      eventType,\n      component,\n      state,\n      props,\n      event,\n      typeof: typeof event,\n      isArray: Array.isArray(event),\n    });\n    if (event instanceof Error) {\n      log.error(event);\n      return;\n    }\n\n    const Component =\n      componentsMap[\n        (component || 'View') as keyof typeof componentsMap\n      ];\n    if (Array.isArray(event)) {\n      for (const mutation of event)\n        render(ref, eventType, props)(mutation);\n      return;\n    }\n\n    if (\n      event instanceof MutationRecord &&\n      event.type === 'childList'\n    ) {\n      let refs = [];\n      // for (let item of event.target) {\n      //   if (item instanceof HTMLElement) refs.push(item.getAttribute('ref'))\n      // }\n      log.log('A child node has been added or removed.', {\n        target: event.target,\n      });\n      return;\n    }\n    if (\n      event instanceof MutationRecord &&\n      event.type === 'attributes'\n    ) {\n      log.log(`The ${event.attributeName} attribute was modified.`, {\n        event,\n      });\n      if (ref.current) ref.current.innerHTML = Component(state);\n      return;\n    }\n    // options: { subtree: true } must be enabled on MutationObserver\n    // if (event instanceof MutationRecord && event.type === 'subtree') {\n    //   log.log(`The children was modified.`, { event });\n    //   return;\n    // }\n\n    if (!Component) throw Error(`Component ${component} not found`);\n    // FIXME: Fix this\n    // if (!history.state) throw Error(ERROR_NOT_FOUND)\n    if (ref?.current) ref.current.innerHTML = Component(state);\n  };\n\nconst attachEvents = async (ref: Ref, props: State) => {\n  log.debug('attachEvents', { ref, props });\n\n  // To observe DOM changes\n  const observer = new MutationObserver(render(ref, 'render', props));\n  ref.current && observer.observe(ref.current, mutationConfig);\n\n  // addEventListener('popstate', render(ref, 'popstate'));\n  // @ts-ignore\n  navigation?.addEventListener(\n    'navigate',\n    render(ref, 'navigate', props),\n  );\n\n  // TODO: Move here from main()\n  // document.addEventListener('error', render(ref, 'error', props))\n\n  // Cleanup on unmount\n  ref?.current?.addEventListener('DOMRemoved', () => {\n    if (!globalThis.hasOwnProperty('navigation')) return;\n    log.info('DOMRemoved');\n    // removeEventListener('popstate', popstate);\n    // @ts-ignore\n    navigation?.removeEventListener(\n      'navigate',\n      render(ref, 'navigate', props),\n    );\n    observer.disconnect();\n  });\n};\n\nconst runServices = async (ref: Ref, props: State) => {\n  log.debug('runServices', { ref, props });\n  const { services } = props;\n  const [state, setState] = useState();\n\n  if (!services) return;\n  for (const serviceName of services) {\n    // @ts-ignore\n    const service = window.servicesMap?.[serviceName];\n    if (!service) throw Error(`Service ${serviceName} not found`);\n    await service(ref);\n  }\n\n  // Keep history\n  setState({ services: null });\n};\n\nconst View: FC<ViewProps> = (props = {}) => {\n  log.debug({ props });\n  const {\n    tag = 'div',\n    className = '',\n    children = [],\n    services = [],\n    component = 'View',\n    ...rest\n  } = props;\n  const ref = createRef();\n  const [state, setState] = useState();\n\n  setTimeout(async () => {\n    if (!ref.current) return;\n    if (services?.length) attachEvents(ref, props);\n    if (services?.length) runServices(ref, props);\n  });\n\n  // TODO: Replace with imperative\n  const content = Array.isArray(children)\n    ? children\n        .map((childProps: ReactNode) =>\n          childProps instanceof Object\n            ? View(<ViewProps>childProps ?? {})\n            : `${childProps}`,\n        )\n        .join?.('')\n    : escapeHTML(`${children}`);\n\n  const restProps = Object.entries(rest)?.reduce?.(\n    (acc, [key, value = '']) => `${acc} ${key}=\"${value}\"`,\n    '',\n  );\n\n  log.debug('Rendering', { content, restProps });\n\n  return `\n    <${tag} class=\"${className}\" ref=\"${ref}\" ${restProps}>\n      ${content}\n    </${tag}>\n  `;\n};\n\nexport default View;\n", "import { createRef } from '@app/components/core/view';\ninterface LinkProps {\n  className?: string;\n  children?: string[];\n  tag?: string;\n  to?: string;\n  title?: string;\n  onClick?: () => void;\n}\n\nconst Link: FC<LinkProps> = (props = {}) => {\n  const {\n    className = 'link',\n    children,\n    tag = 'a',\n    to = '#',\n    title = '',\n    onClick,\n  } = props;\n  const ref = createRef();\n\n  setTimeout(() => {\n    if (onClick && ref.current) {\n      ref.current.addEventListener('click', onClick);\n    }\n  });\n\n  return `\n      <${tag} class=\"${className} link\" href=\"${to}\" title=\"${title}\" ref=\"${ref}\" ${/^http/.test(to) ? 'rel=\"noopener noreferrer\"' : ''}>\n        ${children?.join?.('')}\n      </${tag}>\n    `;\n};\n\nexport default Link;\n", "import ErrorPage from './error';\nimport Link from '@app/components/link/link';\n\nexport default () =>\n  ErrorPage({\n    message: '403 Forbidden',\n    children: [\n      Link({\n        to: '#/login',\n        title: 'Go to login page',\n        children: ['Log in'],\n      }),\n    ],\n  });\n", "import ErrorPage from './error';\nimport Link from '@app/components/link/link';\n\nexport default () =>\n  ErrorPage({\n    message: '404 Page not found',\n    children: [\n      Link({ to: '/', title: 'Go to home page', children: ['Home'] }),\n      Link({\n        onClick: () => {\n          history.go(-1);\n        },\n        title: 'Go back',\n        children: ['Back'],\n      }),\n    ],\n  });\n", "import ErrorPage from './error';\nimport Link from '@app/components/link/link';\n\nexport default (error: Error) =>\n  ErrorPage({\n    message: error.message,\n    children: [\n      Link({\n        onClick: () => {\n          location.reload();\n        },\n        title: 'Reload',\n        children: ['Reload'],\n      }),\n      Link({\n        onClick: () => {\n          history.go(-1);\n        },\n        title: 'Go back',\n        children: ['Back'],\n      }),\n    ],\n  });\n", "'use strict'\n/* global window, process, navigation */\n// @deno-types='@app/types.d'\nimport Error403Page from '@app/pages/error/error-403'\nimport Error404Page from '@app/pages/error/error-404'\nimport Error500Page from '@app/pages/error/error-500'\nimport * as log from '@app/services/log';\nimport { getRoute } from '@app/services/web-utils';\n\nconst Test = () => {\n  addEventListener('DOMContentLoaded', () => {\n    log.error(new Error('Some error test'))\n  })\n  setTimeout(() => {\n    log.error(new Error('Throw error on setTimeout'))\n  });\n  Promise.reject(new Error('Throw error on promise')).catch((e) => {log.error(e)})\n  log.error(new Error('Throw error immediately'))\n  return `Some error test`\n}\n\nconst Default = () => {\n  setTimeout(() => {\n    const nextUrl = window.innerWidth < 768\n    ? \"/1990/mobile/\"\n    : \"/1990/desktop/\"\n\n    const url = document.getElementById('url') as HTMLAnchorElement | undefined;\n    if (url) url.href = nextUrl;\n    window.location.href.includes(nextUrl) || (window.location.href = nextUrl)\n  }, 1e3);\n}\n\n// TODO: Move route to services\nconst route = (uri = '/') => {\n  log.info(`Loading ${uri}`)\n  try {\n    switch (true) {\n      case /\\/test\\/?$/.test(uri): return Test()\n      // Default redirect\n      case /^\\/1990\\/?$/.test(uri):\n      case /^\\/$/.test(uri): return Default()\n      case uri === '/403/' || uri === '/403': return Error403Page()\n      default: return Error404Page();\n    }\n  } catch (e) {\n    // @ts-ignore\n    const error = e instanceof Error ? e : { message: e?.message || e } as Error\n    return Error500Page(error);\n  }\n}\n\nconst onError = (e: ErrorEvent): void => {\n  // e.preventDefault();\n  const { error } = e;\n  log.error(error)\n}\n\nconst main = () => {\n  const path = getRoute()\n  if (!path) return\n  // if (location.pathname === path) return\n  const out = route(path)\n  if (!out) return\n  if (typeof window === 'undefined') return\n  if (window?.document) {\n    addEventListener('error', onError)\n    const root = document.getElementById('root')\n    if (root == null) return;\n    root.innerHTML = out\n  }\n}\n\n// navigation?.addEventListener('navigate', main);\naddEventListener('DOMContentLoaded', main)\naddEventListener(\"hashchange\", main);\n"],
  "mappings": "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",
  "names": ["LinkList", "props", "className", "children", "squire", "tag", "classList", "link", "link_list_default", "ErrorPage", "message", "children", "link_list_default", "error_default", "ERROR_ACCESS_TOKEN", "ERROR_NOT_FOUND", "isProd", "error", "ERROR_NOT_FOUND", "ERROR_ACCESS_TOKEN", "info", "isProd", "args", "getRoute", "protocol", "hash", "pathname", "roll", "floor", "random", "Ref", "id", "createRef", "Link", "props", "className", "children", "tag", "to", "title", "onClick", "ref", "createRef", "link_default", "error_403_default", "error_default", "link_default", "error_404_default", "error_default", "link_default", "error_500_default", "error", "error_default", "link_default", "Test", "error", "Default", "nextUrl", "url", "route", "uri", "info", "error_403_default", "error_404_default", "e", "error_500_default", "onError", "main", "path", "getRoute", "out", "root"]
}
