{
  "version": 3,
  "sources": ["../../src/components/link-list/link-list.ts", "../../src/pages/error/error.ts", "../../src/components/link/link.ts", "../../src/pages/error/error-403.ts", "../../src/components/core/constants.ts", "../../src/pages/error/error-404.ts", "../../src/pages/error/error-500.ts", "../../src/services/log.ts", "../../src/components/core/view.ts", "../../src/components/sprite/sprite.ts", "../../src/components/icon/icon.ts", "../../src/components/core/slot-machine.ts", "../../src/components/image/image.ts", "../../src/components/header/header.ts", "../../src/pages/home/home.ts", "../../src/components/action/action.ts", "../../src/pages/login/login.ts", "../../src/services/oauth.ts", "../../src/services/github-api.ts", "../../src/services/editor.ts", "../../src/services/public-api.ts", "../../src/services/preview.ts", "../../src/components/core/user-info.ts", "../../src/pages/profile/profile.ts", "../../src/services/router.ts"],
  "sourcesContent": ["interface LinkListProps {\n  className?: string;\n  children?: string[];\n  tag?: string;\n  squire?: boolean;\n}\n\nconst LinkList:FC<LinkListProps> = (props = {}) => {\n  const { className = '', children, squire, tag = 'div' } = props\n  let classList = `link-list`\n  if (className) classList += ` ${className}`\n  if (squire) classList += ' link-list--squire'\n\n  return `\n      <${tag} class=\"${classList}\">\n        ${children?.map((link:string) => `<div class=\"link-list__item\">${link}</div>`).join('')}\n      </${tag}>\n    `\n}\n\nexport default LinkList\n", "import LinkList from '@app/components/link-list/link-list.ts'\n\ninterface ErrorPageProps {\n  message: string;\n  children?:string[]\n}\n\nconst ErrorPage:FC<ErrorPageProps> = ({ message, children } = { message: 'Unknown error' }) => `\n  <div class=\"error\">\n    <div class=\"card error__card\">\n      <p>${message}</p>\n      ${LinkList({\n    children,\n  })}\n    </div>\n  </div>\n`\n\n\nexport default ErrorPage\n", "import { createRef } from '@app/components/core/view.ts';\ninterface LinkProps {\n  className?: string;\n  children?: string[];\n  tag?: string;\n  to?: string;\n  title?: string;\n  onClick?: () => void;\n}\n\nconst Link:FC<LinkProps> = (props = {}) => {\n  const { className = 'link', children, tag = 'a', to = '#', title = '', onClick } = props\n  const ref = createRef();\n\n  setTimeout(() => {\n    if (onClick && ref.current) {\n      ref.current.addEventListener('click', onClick);\n    }\n  })\n\n  return `\n      <${tag} class=\"${className} link\" href=\"${to}\" title=\"${title}\" ref=\"${ref}\">\n        ${children?.join?.('')}\n      </${tag}>\n    `\n}\n\nexport default Link\n", "import ErrorPage from './error.ts'\nimport Link from '@app/components/link/link.ts'\n\nexport default (error: Error) => ErrorPage({\n  message: error.message,\n  children: [\n    Link({ to: '#/login', title: 'Go to login page', children: ['Log in'] }),\n  ],\n})\n", "export const CLIENT_ID = 'ae0dcffd947e0ca15a12'\nexport const SCOPE = 'user repo'\nexport const ERROR_ACCESS_TOKEN = 'Access token not provided'\nexport const ERROR_NOT_FOUND = 'Page not found'\nexport const ERROR_REQUEST = 'Wrong request'", "import ErrorPage from './error.ts'\nimport Link from '@app/components/link/link.ts'\nimport { ERROR_NOT_FOUND } from '@app/components/core/constants.ts';\n\nexport default (error = { message: ERROR_NOT_FOUND }) => ErrorPage({\n  message: error.message,\n  children: [\n    Link({ to: '#', title: 'Go to home page', children: ['Home'] }),\n    Link({ onClick: () => { history.go(-1) }, title: 'Go back', children: ['Back'] }),\n  ],\n})\n", "import ErrorPage from './error.ts'\nimport Link from '@app/components/link/link.ts'\n\nexport default (error: Error) => ErrorPage({\n  message: error.message,\n  children: [\n    Link({ onClick: () => { location.reload() }, title: 'Reload', children: ['Reload'] }),\n    Link({ onClick: () => { history.go(-1) }, title: 'Go back', children: ['Back'] }),\n  ],\n})\n", "import Error403Page from '@app/pages/error/error-403.ts'\nimport Error404Page from '@app/pages/error/error-404.ts'\nimport Error500Page from '@app/pages/error/error-500.ts'\nimport { ERROR_ACCESS_TOKEN, ERROR_NOT_FOUND } from '@app/components/core/constants.ts';\n\nconst isProd = true\nexport const error = (error: Error) => {\n  // console.error(error)\n  if (typeof window === 'undefined') return;\n\n  // Send logs to Sentry\n  if (isProd && typeof Sentry !== 'undefined') Sentry.captureException(error);\n\n  const root = document.getElementById('root')\n  if (root == null) return;\n  if (error.message === ERROR_NOT_FOUND) {\n    root.innerHTML = Error404Page(error)\n    return;\n  }\n  if (error.message === ERROR_ACCESS_TOKEN) {\n    root.innerHTML = Error403Page(error)\n    return;\n  }\n  root.innerHTML = Error500Page(error)\n  return;\n}\n\n// @eslint-disable-next-line no-console\nexport const debug = isProd ? () => {} : (...args:unknown[]) => { console.debug(...args); }\n// @eslint-disable-next-line no-console\nexport const warn = isProd ? () => {} : (...args:unknown[]) => { console.warn(...args); }\n// @eslint-disable-next-line no-console\nexport const info = isProd ? () => {} : (...args:unknown[]) => { console.info(...args); }\n", "// deno-lint-ignore-file no-undef\n// global document\nimport * as log from '@app/services/log.ts';\n\nexport class Ref {\n  id = '';\n  toString() {\n    const id = btoa(`${Math.ceil(Math.random() * 1E+13) + +new Date}`).slice(10,18)\n    return (this.id = this.id || `ref-${id}`);\n  }\n  get current() {\n    if (typeof window === 'undefined' || typeof document === 'undefined') return null\n    return <HTMLInputElement>document.querySelector(`[ref=${this.id}]`);\n  }\n}\n\nexport const createRef = () => new Ref();\n\nconst View: ViewProps = ({ tag = 'div', className = '', children = [], services = [], ...rest }) => {\n  const ref = createRef();\n  setTimeout(() => {\n    Promise.all((services as Service[])?.map((service) => service(ref))).catch((error) => { log.error(error); })\n  });\n\n  return `\n    <${tag} class=\"${className}\" ref=\"${ref}\" ${rest?.reduce?.((acc:string, key:string, value:string) => `${acc} ${key}=\"${value}\"`, '')}>\n      ${children?.join?.('')}\n    </${tag}>\n  `;\n}\n\nexport default View;\n", "import icons from '@app/icons/index.ts';\n\nconst xmlns = 'https://www.w3.org/2000/svg'\n\nexport const spriteMap = new Map()\n\nconst Sprite = () => `\n  <svg xmlns=\"${xmlns}\" display=\"none\">\n  ${Object.entries(icons).map(([name, icon]) => {\n    spriteMap.set(name, { viewBox: icon.match(/viewBox=\"([^\"]+)\"/i)?.[1] })\n    return icon\n      .replace(`xmlns=\"${xmlns}\"`, `id=\"sprite-${name}\"`)\n      .replaceAll(/\\bsvg\\b/g, 'symbol');\n  }).join('')}\n  </svg>\n`\n\nexport default Sprite\n", "import { createRef } from '@app/components/core/view.ts';\nimport { spriteMap } from '@app/components/sprite/sprite.ts';\n\ninterface IconProps {\n  className?: string;\n  name: string;\n}\n\nconst Icon:FC<IconProps> = ({ className, name } = { name: 'unknown' }) => {\n  const ref = createRef();\n\n  setTimeout(() => {\n    if (typeof window === 'undefined' || typeof document === 'undefined') return;\n\n    const viewBox = document.getElementById(`sprite-${name}`)?.getAttribute('viewBox') || '0 0 0 0'\n    ref.current?.setAttribute('viewBox', viewBox)\n  })\n\n  return `\n    <svg class=\"${className}\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"${spriteMap.get(name)?.viewBox || '0 0 0 0'}\" ref=\"${ref}\">\n      <use xlink:href=\"#sprite-${name}\" />\n    </svg>\n  `\n}\n\nexport default Icon\n", "import Icon from '@app/components/icon/icon.ts'\nimport { createRef } from '@app/components/core/view.ts';\n\nlet tries = 0;\nlet blocked = false;\nconst roll = '\uD83C\uDF4F,\uD83C\uDF30,\uD83C\uDF4B,\uD83C\uDF45,\uD83C\uDF46,\uD83C\uDF47,\uD83C\uDF53,\uD83C\uDF49,\uD83C\uDF50,\uD83C\uDF52,\uD83C\uDF51,\uD83E\uDD51'.split(',');\nconst { floor, random } = Math;\nconst randomRoll = (what: string[]):string => what[floor(random() * what.length)];\n\nconst Reels:FC<{}> = () => {\n  if (blocked) return '';\n  const [a, b, c] = [roll, roll, roll].flatMap(randomRoll);\n\n  if (a == b && b == c) {\n    blocked = true;\n    setTimeout(() => {\n      typeof window !== 'undefined' && alert(`You won in ${tries} tries`);\n      blocked = false;\n    }, 100);\n    tries = 0;\n  } else {\n    tries++;\n  }\n  return `${a} ${b} ${c}`;\n}\n\nconst SlotMachine:FC<{}> = () => {\n  const ref = createRef();\n\n  setTimeout(() => {\n    ref.current?.addEventListener('click', () => {\n      if (!ref.current) return;\n      ref.current.innerHTML = Reels()\n    });\n\n    if (typeof window === 'undefined' || typeof document === 'undefined') return\n\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      // bug 354358\n      if (event.isComposing || event.keyCode === 229) {\n        return;\n      }\n\n      // Enter, Space\n      if (event.which !== 13 && event.which !== 32) {\n        return;\n      }\n\n      if (!ref.current) return;\n      ref.current.innerHTML = Reels();\n    });\n  })\n\n  return `\n    <div class=\"slot-machine\">\n      ${Icon({ name: 'slot-machine-icon', className: 'slot-machine__icon'})}\n      <span class=\"slot-machine__reels\" ref=\"${ref}\">${Reels()}</span>\n    </div>\n  `;\n}\n\nexport default SlotMachine\n", "const typesMap = {\n  'image/webp': 'webp',\n  'image/jpeg': 'jpg',\n  'image/png': 'png',\n}\n\ninterface SourcesProps {\n  types: string;\n  sizes: string;\n  src: string;\n}\nconst sourcesDefaults = { types: '', sizes: '', src: '' }\nconst Sources:FC<SourcesProps> = ({ types, sizes, src } = sourcesDefaults) => Object.entries(typesMap)\n  .filter(([_, ext]) => types.includes(ext))\n  .flatMap(([type, ext]) => `\n    <source type=\"${type}\" srcset=\"${sizes.split(',').map((w:string) => src.replace(new RegExp(`.(${types})$`), `_${w}.${ext} ${w}w`))}\" />\n  `)\n  .join('')\n\ninterface ImageProps {\n  src:string;\n  ratio:string;\n  sizes:string;\n  types:string;\n  alt?:string;\n  itemprop?:string;\n}\n\nconst Image:FC<ImageProps> = (props) => {\n  if (!props) return ''\n  const { src, ratio, sizes, types = 'png|webp', alt = '', itemprop = ''  } = props;\n  const [width, height] = ratio.split(':')\n\n  return `\n    <picture>\n      ${Sources({ types, sizes, src })}\n      <img src=\"${types.includes('webp') ? src.replace(/\\..*$/, '.webp') : src}\" width=\"${width}\" height=\"${height}\" alt=\"${alt}\" itemprop=\"${itemprop}\" />\n    </picture>\n  `\n}\n\nexport default Image\n", "import Image from '@app/components/image/image.ts'\nimport ascii from '@assets/home/images/artursjansons.ascii';\n\nconst Header:FC<{}> = () => `\n    <header class=\"header\">\n      <a href=\"#home\" class=\"header__avatar\" alt=\"avatar\">${Image({ itemprop: \"photo\", src: `home/images/artursjansons.jpg`, ratio: \"1:1\", sizes: \"432,216,64\", types: 'jpg|png|webp', alt: ascii })}</a>\n    </header>\n  `\nexport default Header", "// import '@app/lib/ga';\n// import '@app/lib/clouds';\n\nimport SlotMachine from '@app/components/core/slot-machine.ts'\nimport Header from '@app/components/header/header.ts'\nimport Icon from '@app/components/icon/icon.ts'\nimport Link from '@app/components/link/link.ts'\nimport LinkList from '@app/components/link-list/link-list.ts'\n\nconst Home = () => `\n    ${Header()}\n    <article lang=\"en\">\n      <section id=\"home\" itemscope itemtype=\"https://schema.org/Person\">\n        <header>\n          <h2 itemprop=\"name\" class=\"h2\">\n            <span itemprop=\"givenName\">Art\u016Brs</span>\n            <span itemprop=\"familyName\">Jansons</span>\n          </h2>\n          <span itemprop=\"jobTitle\" class=\"subtitle\">Software Developer</span>\n          <br>\n            <span itemprop=\"address\" itemscope itemtype=\"https://schema.org/PostalAddress\">\n              <span itemprop=\"addressLocality\">\uD83C\uDDF7\uD83C\uDDFA St.Petersburg, Russia</span>\n            </span>\n            <a href=\"callto:+79213900737\"><i class=\"fa fa-whatsapp\"></i><span itemprop=\"telephone\">+7-921-39-00-737</span></a>\n            <a href=\"mailto:artur.janson+github@yandex.ru?title=iegik.github.io:contact\" itemprop=\"email\">artur.janson@yandex.ru</a>\n          ${LinkList({\n    squire: true,\n    children: [\n      Link({ to: 'https://linkedin.com/in/iegik', title: 'LinkedIn', children: [Icon({ name: \"linkedin-icon\", className: 'link-list__icon' })]}),\n      Link({ to: 'https://github.com/iegik', title: 'GitHub', children: [Icon({ name: \"github-icon\", className: 'link-list__icon' })]}),\n      Link({ to: 'https://profile.codersrank.io/user/iegik', title: 'Coders Rank', children: [Icon({ name: \"codersrank-icon\", className: 'link-list__icon' })]}),\n      Link({ to: 'https://jsfiddle.net/user/iegik', title: 'JSFiddle', children: [Icon({ name: \"jsfiddle-icon\", className: 'link-list__icon' })]}),\n      Link({ to: 'https://stackoverflow.com/users/771471/iegik', title: 'Stack Overflow', children: [Icon({ name: \"stackoverflow-icon\", className: 'link-list__icon' })]}),\n    ],\n  })}\n          <div class=\"network\">\n            ${Link({ to: '/login/', title: 'Login', children: ['\uD83D\uDEAA'] })}\n          </div>\n        </header>\n      </section>\n    </article>\n    <footer>\n      ${SlotMachine()}\n    </footer>\n  `\n\nexport default Home\n", "import { createRef } from '@app/components/core/view.ts';\n\ninterface Props {\n  className?: string;\n  children?: string[];\n  tag?: string;\n  type?: string;\n  onClick?: (event: Event) => void;\n}\n\nconst Action:FC<Props> = (props = {}) => {\n  const { className = '', children, tag = 'button', onClick, type } = props\n  const ref = createRef();\n\n  setTimeout(() => {\n    if (onClick) ref.current?.addEventListener('click', onClick);\n  });\n\n  return `\n      <${tag} class=\"${className}\" ref=\"${ref}\" type=\"${type}\">\n        ${children?.join('')}\n      </${tag}>\n    `\n}\n\nexport default Action\n", "import Icon from '@app/components/icon/icon.ts'\nimport Action from '@app/components/action/action.ts'\nimport { CLIENT_ID as clientId, SCOPE as scope } from '@app/components/core/constants.ts'\nimport * as log from '@app/services/log.ts';\n\nconst PATTERN_LOGIN = '^[\\\\d\\\\w\\\\-\\\\.]+$'\nconst REGEX_LOGIN = new RegExp(PATTERN_LOGIN);\n\nconst assert = (expr:boolean, message:string) => !expr ? message : undefined\n\n// const validate = (value?:string, rules?:string[]):string | boolean => rules?.reduce((prev, ruleName) => false\n//   || assert(ruleName === 'required' && value !== null, 'Field is required')\n//   || assert(/^regex/.test(ruleName) && value !== null && (new RegExp(ruleName.split(':')[1])).test(value || ''), `Value should match pattern ${ruleName.split(':')[1]}`)\n//   || assert(ruleName === 'username' && value !== null && REGEX_LOGIN.test(value || ''), 'Value should contain only valid characters')\n// )\n\nconst onClick = () => {\n  if (typeof document === 'undefined') return;\n  if (typeof window.sessionStorage === 'undefined') return;\n  const loginField = <HTMLInputElement>document.querySelector('[name=\"login\"]')\n  if (loginField.validity.valid === false) return\n  const login = loginField?.value\n  const state = btoa(`${+new Date()}`).slice(10,18)\n  window.sessionStorage?.setItem('state', state)\n  const url = `https://github.com/login/oauth/authorize?client_id=${clientId}&login=${encodeURIComponent(login)}&scope=${encodeURIComponent(scope)}&state=${state}`\n  log.info(`Navigated to ${url}`, { clientId, scope, state })\n  document.location.href = url\n};\n\nconst Login = () => `\n    <div class=\"login\">\n      <form>\n        <input type=\"text\" name=\"login\" placeholder=\"username\" pattern=\"${PATTERN_LOGIN}\" />\n        ${Action({\n    className: 'login__btn',\n    children: [\n      'Login with ',\n      Icon({\n        name: \"github-logo\",\n        className: 'login__btn__icon',\n      })],\n    onClick,\n    type: 'submit',\n  })}\n      </form>\n    </div>\n  `\n\nexport default Login\n", "import { CLIENT_ID as clientId } from '@app/components/core/constants.ts'\nimport * as log from '@app/services/log.ts';\n\nconst getAccessToken = async (code?:string) => {\n  if (!code) return\n  log.debug('Requesting access_token', { code, clientId })\n  const { access_token: accessToken, scope, token_type: tokenType } = await fetch(`https://qilg4ch66b3vpgtevzccb5meum0ttfcl.lambda-url.eu-north-1.on.aws/?code=${code}&client_id=${clientId}`).then((res) => res.json())\n\n  window.sessionStorage?.setItem('access_token', accessToken)\n  window.sessionStorage?.setItem('scope', scope)\n  window.sessionStorage?.setItem('token_type', tokenType)\n  document.location.href = '/#/profile' // history.pushState({ access_token, scope, token_type }, 'User Info', '/#/profile')\n}\n\nconst OauthService = () => {\n  const { protocol, hash, search } = location\n  const state = window.sessionStorage?.getItem('state')\n  const code = window.sessionStorage?.getItem('code')\n  log.debug('Checking GET params', { protocol, hash, search, state })\n  const uri = new URLSearchParams(search)\n  if (uri.get('state') !== state) return window.history?.go(-2);\n\n  getAccessToken(uri.get('code') || undefined);\n}\n\nexport default OauthService\n", "import { ERROR_NOT_FOUND } from '@app/components/core/constants.ts';\nimport repoFile from '@app/graphql/github/repo_file.graphql';\n\nconst githubResponseMiddleware = async (res) => {\n  const { data, errors } = await res.json();\n  if (errors) throw errors[0];\n  return data;\n}\n\nclass GitHubApi {\n  static instance = new GitHubApi();\n  private constructor() {\n    this.repoName = 'iegik.github.com';\n    this.repoOwner = 'iegik';\n    this.storeRoot = 'gh-pages:data';\n  }\n  static getInstance() {\n    return this.instance;\n  }\n\n  async request({ query, variables }) {\n    const accessToken = window.sessionStorage?.getItem('access_token');\n    const tokenType = window.sessionStorage?.getItem('token_type');\n\n    const res = await fetch('https://api.github.com/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `${tokenType} ${accessToken}`,\n      },\n      body: JSON.stringify({\n        query,\n        variables,\n      }),\n    })\n    return githubResponseMiddleware(res)\n  }\n\n  async getFile(path: string) {\n    const data = await this.request({ query: repoFile, variables: {\n      repo_name: this.repoName,\n      repo_owner: this.repoOwner,\n      object_path: `${this.storeRoot}${path}.json`,\n    }})\n    if (!data) throw Error(ERROR_REQUEST);\n    const {\n      repository: { object },\n    } = data;\n    if (!object) throw Error(ERROR_NOT_FOUND);\n    const { text } = object;\n    return JSON.parse(text);\n  };\n}\n\nexport default GitHubApi;\n", "import View from '@app/components/core/view.ts';\nimport { getRoute } from '@app/services/router.ts';\nimport GitHubApi from '@app/services/github-api.ts';\n\nconst EditorService = async (ref: Ref) => {\n  const editor = ref.current;\n  if (!editor) return;\n  editor.focus();\n\n  const route = getRoute();\n  const data = await GitHubApi.getInstance().getFile(route);\n\n  editor.innerHTML = View(data);\n};\n\nexport default EditorService;\n", "import { ERROR_NOT_FOUND } from '@app/components/core/constants.ts';\n\nconst publicResponseMiddleware = (res) => res.json();\n\nclass PublicApi {\n  static instance = new PublicApi();\n  private constructor() {}\n  static getInstance() {\n    return this.instance;\n  }\n\n  async request(uri) {\n    const res  = await fetch(`${location.protocol}//${location.host}/data${uri}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    })\n    return publicResponseMiddleware(res)\n  }\n\n  async getFile(path: string) {\n    const data = await this.request(`${path}.json`)\n    if (!data) throw Error(ERROR_NOT_FOUND);\n    return data;\n  };\n}\n\nexport default PublicApi;\n", "import View from '@app/components/core/view.ts';\nimport { getRoute } from '@app/services/router.ts';\nimport PublicApi from '@app/services/public-api.ts';\n\nconst PreviewService = async (ref: Ref) => {\n  const preview = ref.current;\n  if (!preview) return;\n  preview.focus();\n\n  const route = getRoute();\n  const data = await PublicApi.getInstance().getFile(route);\n\n  preview.innerHTML = View(data);\n};\n\nexport default PreviewService;\n", "import { createRef } from '@app/components/core/view.ts';\nimport { ERROR_ACCESS_TOKEN } from '@app/components/core/constants.ts';\nimport * as log from '@app/services/log.ts';\n\ninterface UserInfoProps {\n  avatarUrl?: string;\n  login?: string;\n}\n\nconst UserInfo:FC<UserInfoProps> = ({ avatarUrl, login } = {}) => {\n  const ref = createRef();\n\n  setTimeout(() => {\n    const accessToken = window.sessionStorage?.getItem('access_token')\n    const tokenType = window.sessionStorage?.getItem('token_type')\n    const fetchUser = async () => {\n      // Getting state\n      log.debug('Requesting user', { accessToken, tokenType })\n      const { avatar_url: avatarUrl, login } = await fetch('https://api.github.com/user', { method: 'GET', headers: { 'Authorization': `${tokenType} ${accessToken}` } }).then((res) => res.json())\n      log.debug('User data', { avatarUrl, login })\n      return { avatarUrl, login }\n    }\n    log.debug({ accessToken, tokenType })\n    if (!accessToken) throw Error(ERROR_ACCESS_TOKEN)\n    if (!login) fetchUser()\n      .then((data) => { if (ref.current && data.login) ref.current.innerHTML = UserInfo(data); })\n  })\n\n  return `\n    <div class=\"user-info\" ref=\"${ref}\">\n      ${avatarUrl && `<img src=\"${avatarUrl}\" />`}\n      ${login && `<span>${login}</span>`}\n    </div>\n  `;\n}\n\nexport default UserInfo\n", "import UserInfo from '@app/components/core/user-info.ts'\n\nconst Profile = () => `\n    <div class=\"login\">\n      ${UserInfo()}\n    </div>\n  `\n\nexport default Profile\n", "/* global window, process, navigation */\n// @deno-types='@app/types.d.ts'\nimport Home from '@app/pages/home/home.ts'\nimport Login from '@app/pages/login/login.ts'\nimport OauthService from '@app/services/oauth.ts'\nimport EditorService from '@app/services/editor.ts'\nimport PreviewService from '@app/services/preview.ts'\nimport View from '@app/components/core/view.ts'\nimport * as log from '@app/services/log.ts';\nimport Profile from '@app/pages/profile/profile.ts'\n\nimport { ERROR_NOT_FOUND } from '@app/components/core/constants.ts';\n\nconst Loading = (props) =>  View({ children: ['Loading...'], ...props });\n\nconst route = (uri = '/') => {\n  log.info(`Loading ${uri}`)\n  switch (true) {\n    case /^\\/login\\/?$/.test(uri): return Login()\n    case /^\\/oauth\\/?$/.test(uri): return Loading({ services: [OauthService]})\n    case /^\\/profile\\/?$/.test(uri): return Profile()\n    case /^\\/editor\\/?$/.test(uri): return Loading({ services: [EditorService]})\n    case /^\\/preview\\/?$/.test(uri): return Loading({ services: [PreviewService]})\n    case uri === '/' || uri === '': return Home()\n    default: throw Error(ERROR_NOT_FOUND)\n  }\n}\n\nconst onError = (e: ErrorEvent): void => {\n  e.preventDefault();\n  const { error } = e;\n  log.error(error)\n}\n\nexport const getRoute = (e?: Event) => {\n  const { protocol, hash, pathname } = new URL(`${e?.destination?.url || document.location}`)\n  const path = `${pathname.replace('index.html', '')}${hash.slice(2)}` // /path1#/path2\n  return path\n}\n\nconst main = (e?: Event) => {\n  const path = getRoute(e)\n  if (window?.document) {\n    addEventListener('error', onError)\n    const root = document.getElementById('root')\n    if (root == null) return;\n    root.innerHTML = route(path)\n  }\n}\n\nwindow.history.pushState = new Proxy(window.history.pushState, {\n  apply: (target, thisArg, argArray) => {\n    main()\n    return target.apply(thisArg, argArray);\n  },\n});\n\nnavigation?.addEventListener('navigate', main);\nmain()\n"],
  "mappings": "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",
  "names": []
}
