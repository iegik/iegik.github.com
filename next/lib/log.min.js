"use strict";(()=>{var _=(e={})=>{let{className:t="",children:o,squire:r,tag:n="div"}=e,a="link-list";return t&&(a+=` ${t}`),r&&(a+=" link-list--squire"),`
      <${n} class="${a}">
        ${o?.map(p=>`<div class="link-list__item">${p}</div>`).join("")}
      </${n}>
    `},v=_;var I=({message:e,children:t}={message:"Unknown error"})=>`
  <div class="error">
    <div class="card error__card">
      <p>${e}</p>
      ${v({children:t})}
    </div>
  </div>
`,c=I;var y="Access token not provided",i="Page not found",u="Wrong request";var $=`query RepoFile($repo_owner: String!, $repo_name: String!, $object_path: String!) {
  repository(owner: $repo_owner, name: $repo_name) {
    object(expression: $object_path) {
      ... on Blob {
        byteSize
        text
      }
    }
  }
}
# {
#   "repo_name": "iegik.github.com",
#   "repo_owner": "iegik",
#   "object_path": "gh-pages: data/home.json"
# }`;var R=`query GetUser($login:String!) {
  user(login: $login) {
    avatarUrl
    login
  }
}
`;var M=async e=>{let{data:t,errors:o}=await e.json();if(o)throw o[0];return t},k=class e{constructor(){this.repoName="iegik.github.com";this.repoOwner="iegik";this.storeRoot="gh-pages:data"}static{this.instance=new e}static getInstance(){return this.instance}async request({query:t,variables:o}){if(typeof window>"u")return;let r=window.sessionStorage?.getItem("access_token"),n=window.sessionStorage?.getItem("token_type"),a=await fetch("https://api.github.com/graphql",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json",Authorization:`${n} ${r}`},body:JSON.stringify({query:t,variables:o})});return M(a)}async getFile(t){let o=await this.request({query:$,variables:{repo_name:this.repoName,repo_owner:this.repoOwner,object_path:`${this.storeRoot}${t}.json`}});if(!o)throw Error(u);let{repository:{object:r}}=o;if(!r)throw Error(i);let{text:n}=r;return JSON.parse(n)}async getUserInfo(){let{user:t}=await this.request({query:R,variables:{login:this.repoOwner}});if(!t)throw Error(u);return t}};var P=e=>e.json(),x=class e{static{this.instance=new e}constructor(){}static getInstance(){return this.instance}async request(t){let o=await fetch(`${location.protocol}//${location.host}/data${t}`,{headers:{"Content-Type":"application/json",Accept:"application/json"}});return P(o)}async getFile(t){let o=await this.request(`${t}.json`);if(!o)throw Error(i);return o}};var Ue="\u{1F34F},\u{1F330},\u{1F34B},\u{1F345},\u{1F346},\u{1F347},\u{1F353},\u{1F349},\u{1F350},\u{1F352},\u{1F351},\u{1F951}".split(","),{floor:Ae,random:qe}=Math;var w=class{constructor(){this.id=null}toString(){let t=btoa(`${Math.ceil(Math.random()*1e13)+ +new Date}`).slice(10,18);return this.id=this.id||`ref-${t}`}get current(){return typeof window>"u"||typeof document>"u"?null:document.querySelector(`[ref=${this.id}]`)}},l=()=>new w;var H=(e={})=>{let{className:t="link",children:o,tag:r="a",to:n="#",title:a="",onClick:p}=e,m=l();return setTimeout(()=>{p&&m.current&&m.current.addEventListener("click",p)}),`
      <${r} class="${t} link" href="${n}" title="${a}" ref="${m}" ${/^http/.test(n)?'rel="noopener noreferrer"':""}>
        ${o?.join?.("")}
      </${r}>
    `},s=H;var S=e=>c({message:e.message,children:[s({to:"#/login",title:"Go to login page",children:["Log in"]})]});var E=(e={message:i})=>c({message:e.message,children:[s({to:"#",title:"Go to home page",children:["Home"]}),s({onClick:()=>{history.go(-1)},title:"Go back",children:["Back"]})]});var L=e=>c({message:e.message,children:[s({onClick:()=>{location.reload()},title:"Reload",children:["Reload"]}),s({onClick:()=>{history.go(-1)},title:"Go back",children:["Back"]})]});var f=!1,A=e=>{if(typeof window>"u")return;f&&typeof Sentry<"u"&&Sentry.captureException(e);let t=document.getElementById("root");if(t!=null){if(e.message===i){t.innerHTML=E(e);return}if(e.message===y){t.innerHTML=S(e);return}t.innerHTML=L(e)}},g=f?()=>{}:(...e)=>{console.debug(...e)},ht=f?()=>{}:(...e)=>{console.warn(...e)},h=f?()=>{}:(...e)=>{console.info(...e)},q=f?()=>{}:(...e)=>{console.log(...e)};})();
//# sourceMappingURL=log.min.js.map
